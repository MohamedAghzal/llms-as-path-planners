Generate a path to navigate from the initial location to the goal location similarly to the examples below. (0,0) is located in the upper-left corner and (M, N) lies in the M row and N column.
 
###
Description in code:

#The goal is to navigate a 25x25 grid to go from the initial location to the goal while avoiding obstacles
 
obstacles = []
goals = [(3, 13)]
initial_location = (3, 15)

for i in range(2, 5):
    for j in range(1, 6):
        obstacles.append((i, j))
        
for i in range(9, 15):
    for j in range(13, 21):
        obstacles.append((i, j))
        
for i in range(16, 22):
    for j in range(18, 24):
        obstacles.append((i, j))
        
Solution: left left 

###
Description in code:

#The goal is to navigate a 25x25 grid to go from the initial location to the goal while avoiding obstacles
 
obstacles = []
goals = [(19, 3)]
initial_location = (23, 4)

for i in range(2, 5):
    for j in range(1, 6):
        obstacles.append((i, j))
        
for i in range(9, 15):
    for j in range(13, 21):
        obstacles.append((i, j))
        
for i in range(16, 22):
    for j in range(18, 24):
        obstacles.append((i, j))
        
Solution: up up up up left 

###
Description in code:

#The goal is to navigate a 25x25 grid to go from the initial location to the goal while avoiding obstacles
 
obstacles = []
goals = [(5, 23)]
initial_location = (1, 24)

for i in range(2, 5):
    for j in range(1, 6):
        obstacles.append((i, j))
        
for i in range(9, 15):
    for j in range(13, 21):
        obstacles.append((i, j))
        
for i in range(16, 22):
    for j in range(18, 24):
        obstacles.append((i, j))
        
Solution: left down down down down 

###
Description in code:

#The goal is to navigate a 25x25 grid to go from the initial location to the goal while avoiding obstacles
 
obstacles = []
goals = [(3, 12)]
initial_location = (20, 9)

for i in range(2, 5):
    for j in range(1, 6):
        obstacles.append((i, j))
        
for i in range(9, 15):
    for j in range(13, 21):
        obstacles.append((i, j))
        
for i in range(16, 22):
    for j in range(18, 24):
        obstacles.append((i, j))
        
Solution: up up up up up up up up up up up up up up up up up right right right 

###
Description in code:

#The goal is to navigate a 25x25 grid to go from the initial location to the goal while avoiding obstacles
 
obstacles = []
goals = [(0, 11)]
initial_location = (7, 19)

for i in range(2, 5):
    for j in range(1, 6):
        obstacles.append((i, j))
        
for i in range(9, 15):
    for j in range(13, 21):
        obstacles.append((i, j))
        
for i in range(16, 22):
    for j in range(18, 24):
        obstacles.append((i, j))
        
Solution: up up up up up up up left left left left left left left left 

###
Description in code:

#The goal is to navigate a 25x25 grid to go from the initial location to the goal while avoiding obstacles
 
obstacles = []
goals = [(16, 17)]
initial_location = (4, 20)

for i in range(2, 5):
    for j in range(1, 6):
        obstacles.append((i, j))
        
for i in range(9, 15):
    for j in range(13, 21):
        obstacles.append((i, j))
        
for i in range(16, 22):
    for j in range(18, 24):
        obstacles.append((i, j))
        
Solution: 
