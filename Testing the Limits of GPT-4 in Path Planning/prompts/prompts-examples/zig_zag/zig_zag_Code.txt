Generate a path to navigate from the initial location to the goal location similarly to the examples below. (0,0) is located in the upper-left corner and (M, N) lies in the M row and N column.
 
###
Description in code:

#The goal is to navigate a 25x25 grid to go from the initial location to all goals while avoiding obstacles
 
obstacles = []
goals = (0, 19)
initial_location = (2, 19)
entrances = [(1, 15), (3, 1), (5, 4), (7, 8), (9, 2), (11, 11), (13, 17), (15, 14), (17, 19), (19, 19), (21, 20), (23, 17)]

for i in range(1, 25, 2):
    for j in range(25):
        if((i, j) not in entrances):
            obstacles.append((i, j))

Solution: left left left left up up right right right right 

###
Description in code:

#The goal is to navigate a 25x25 grid to go from the initial location to all goals while avoiding obstacles
 
obstacles = []
goals = (12, 15)
initial_location = (16, 3)
entrances = [(1, 15), (3, 1), (5, 4), (7, 8), (9, 2), (11, 11), (13, 17), (15, 14), (17, 19), (19, 19), (21, 20), (23, 17)]

for i in range(1, 25, 2):
    for j in range(25):
        if((i, j) not in entrances):
            obstacles.append((i, j))

Solution: right right right right right right right right right right right up up right right right up up left left 

###
Description in code:

#The goal is to navigate a 25x25 grid to go from the initial location to all goals while avoiding obstacles
 
obstacles = []
goals = (14, 15)
initial_location = (12, 1)
entrances = [(1, 15), (3, 1), (5, 4), (7, 8), (9, 2), (11, 11), (13, 17), (15, 14), (17, 19), (19, 19), (21, 20), (23, 17)]

for i in range(1, 25, 2):
    for j in range(25):
        if((i, j) not in entrances):
            obstacles.append((i, j))

Solution: right right right right right right right right right right right right right right right right down down left left 

###
Description in code:

#The goal is to navigate a 25x25 grid to go from the initial location to all goals while avoiding obstacles
 
obstacles = []
goals = (4, 6)
initial_location = (0, 17)
entrances = [(1, 15), (3, 1), (5, 4), (7, 8), (9, 2), (11, 11), (13, 17), (15, 14), (17, 19), (19, 19), (21, 20), (23, 17)]

for i in range(1, 25, 2):
    for j in range(25):
        if((i, j) not in entrances):
            obstacles.append((i, j))

Solution: left left down down left left left left left left left left left left left left left left down down right right right right right 

###
Description in code:

#The goal is to navigate a 25x25 grid to go from the initial location to all goals while avoiding obstacles
 
obstacles = []
goals = (20, 8)
initial_location = (18, 21)
entrances = [(1, 15), (3, 1), (5, 4), (7, 8), (9, 2), (11, 11), (13, 17), (15, 14), (17, 19), (19, 19), (21, 20), (23, 17)]

for i in range(1, 25, 2):
    for j in range(25):
        if((i, j) not in entrances):
            obstacles.append((i, j))

Solution: left left down down left left left left left left left left left left left 

###
Description in code:

#The goal is to navigate a 25x25 grid to go from the initial location to all goals while avoiding obstacles
 
obstacles = []
goals = (18, 2)
initial_location = (8, 2)
entrances = [(1, 15), (3, 1), (5, 4), (7, 8), (9, 2), (11, 11), (13, 17), (15, 14), (17, 19), (19, 19), (21, 20), (23, 17)]

for i in range(1, 25, 2):
    for j in range(25):
        if((i, j) not in entrances):
            obstacles.append((i, j))

Solution: 
